type Request struct {
}

// Pre implements stagedpipe.Request.Pre().
func (r Request) Pre() error {

}

// Post implements stagedpipe.Request.Post().
func (r Request) Post() error {

}

// HasWaiters implements stagedpipe.Request.HasWaiters().
func (r Request) HasWaiters() bool {

}

// Wait implements stagedpipe.Request.Wait().
func (r Request) Wait() {

}

// Error implements stagedpipe.Request.Error().
func (r Request) Error() error {

}

// SetError implements stagedpipe.Request.SetError().
func (r *Request) SetError(e error) {

}

// ToConcrete converts a statepipe.Request to our concrete Request object.
func ToConcrete[R stagedpipe.Request](r R) (Request, error) {
	x, ok := any(r).(Request)
	if !ok {
		return Request{}, fmt.Errorf("unexpected type %T, expecting Request", r)
	}
	return x, nil
}

// MustConcrete is the same as ToConcrete except an error causes a panic.
func MustConcrete[R stagedpipe.Request](r R) Request {
	x, err := ToConcrete(r)
	if err != nil {
		panic(err)
	}
	return x
}
