// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        (unknown)
// source: github.com/johnsiilver/pipelines/stagedpipe/distrib/internal/messages/proto/messages.proto

// Package messages defines the messages that are sent between the plugin
// client and the plugin server.

package proto

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// ConnType indicates the type of connection that is being made.
type ConnType int32

const (
	ConnType_CNTUnknown ConnType = 0
	// CTRequestGroup indicates that the connection is trying to create a RequestGroup.
	ConnType_CNTRequestGroup ConnType = 1
)

// Enum value maps for ConnType.
var (
	ConnType_name = map[int32]string{
		0: "CNTUnknown",
		1: "CNTRequestGroup",
	}
	ConnType_value = map[string]int32{
		"CNTUnknown":      0,
		"CNTRequestGroup": 1,
	}
)

func (x ConnType) Enum() *ConnType {
	p := new(ConnType)
	*p = x
	return p
}

func (x ConnType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ConnType) Descriptor() protoreflect.EnumDescriptor {
	return file_github_com_johnsiilver_pipelines_stagedpipe_distrib_internal_messages_proto_messages_proto_enumTypes[0].Descriptor()
}

func (ConnType) Type() protoreflect.EnumType {
	return &file_github_com_johnsiilver_pipelines_stagedpipe_distrib_internal_messages_proto_messages_proto_enumTypes[0]
}

func (x ConnType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ConnType.Descriptor instead.
func (ConnType) EnumDescriptor() ([]byte, []int) {
	return file_github_com_johnsiilver_pipelines_stagedpipe_distrib_internal_messages_proto_messages_proto_rawDescGZIP(), []int{0}
}

// MessageType indicates the type of message that is sent.
type MessageType int32

const (
	// TUnknown is an unknown message type, which always indicates a bug in the code.
	MessageType_MTUnknown MessageType = 0
	// MTData is a data message to be fed into a pipeline.
	MessageType_MTData MessageType = 1
	// MTControl is a control message in a data stream.
	MessageType_MTControl MessageType = 2
)

// Enum value maps for MessageType.
var (
	MessageType_name = map[int32]string{
		0: "MTUnknown",
		1: "MTData",
		2: "MTControl",
	}
	MessageType_value = map[string]int32{
		"MTUnknown": 0,
		"MTData":    1,
		"MTControl": 2,
	}
)

func (x MessageType) Enum() *MessageType {
	p := new(MessageType)
	*p = x
	return p
}

func (x MessageType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MessageType) Descriptor() protoreflect.EnumDescriptor {
	return file_github_com_johnsiilver_pipelines_stagedpipe_distrib_internal_messages_proto_messages_proto_enumTypes[1].Descriptor()
}

func (MessageType) Type() protoreflect.EnumType {
	return &file_github_com_johnsiilver_pipelines_stagedpipe_distrib_internal_messages_proto_messages_proto_enumTypes[1]
}

func (x MessageType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MessageType.Descriptor instead.
func (MessageType) EnumDescriptor() ([]byte, []int) {
	return file_github_com_johnsiilver_pipelines_stagedpipe_distrib_internal_messages_proto_messages_proto_rawDescGZIP(), []int{1}
}

// ControlType indicates the type of control message that is sent.
type ControlType int32

const (
	// CTUnknown is an unknown control message type, which always indicates a bug in the code.
	ControlType_CTUnknown ControlType = 0
	// CTError is an error message. This can only come from the plugin to the controller.
	ControlType_CTError ControlType = 1
	// CTConfig is a config message. This can only come from the controller to the plugin.
	// It contains any setup instructions that the plugin needs to know about.
	ControlType_CTConfig ControlType = 2
	// CTCancel is a cancel message. It has no sub-message. This is used to
	// cancel a request group processing. It can only come from a controller
	// to the pipeline.
	ControlType_CTCancel ControlType = 3
	// CTFin is a finished message. It has no sub-message. This is used to signal
	// the sender is done sending.
	ControlType_CTFin ControlType = 4
)

// Enum value maps for ControlType.
var (
	ControlType_name = map[int32]string{
		0: "CTUnknown",
		1: "CTError",
		2: "CTConfig",
		3: "CTCancel",
		4: "CTFin",
	}
	ControlType_value = map[string]int32{
		"CTUnknown": 0,
		"CTError":   1,
		"CTConfig":  2,
		"CTCancel":  3,
		"CTFin":     4,
	}
)

func (x ControlType) Enum() *ControlType {
	p := new(ControlType)
	*p = x
	return p
}

func (x ControlType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ControlType) Descriptor() protoreflect.EnumDescriptor {
	return file_github_com_johnsiilver_pipelines_stagedpipe_distrib_internal_messages_proto_messages_proto_enumTypes[2].Descriptor()
}

func (ControlType) Type() protoreflect.EnumType {
	return &file_github_com_johnsiilver_pipelines_stagedpipe_distrib_internal_messages_proto_messages_proto_enumTypes[2]
}

func (x ControlType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ControlType.Descriptor instead.
func (ControlType) EnumDescriptor() ([]byte, []int) {
	return file_github_com_johnsiilver_pipelines_stagedpipe_distrib_internal_messages_proto_messages_proto_rawDescGZIP(), []int{2}
}

// ErrorCode indicates the type of error that is sent.
type ErrorCode int32

const (
	// ECUnknown is an unknown error code, which always indicates a bug in the code.
	ErrorCode_ECUnknown ErrorCode = 0
	// ECNotAuthorized indicates that the client making the domain socket
	// connection is not authorized to do so. It must match the GID
	// of the domain socket file.
	ErrorCode_ECNotAuthorized ErrorCode = 1
	// ECInternal indicates that an internal error occurred.
	ErrorCode_ECInternal ErrorCode = 2
	// ECCancelled indicates that the request was cancelled by the client.
	ErrorCode_ECCancelled ErrorCode = 3
	// ECPipelineError indicates that an error occurred in the pipeline.
	ErrorCode_ECPipelineError ErrorCode = 4
)

// Enum value maps for ErrorCode.
var (
	ErrorCode_name = map[int32]string{
		0: "ECUnknown",
		1: "ECNotAuthorized",
		2: "ECInternal",
		3: "ECCancelled",
		4: "ECPipelineError",
	}
	ErrorCode_value = map[string]int32{
		"ECUnknown":       0,
		"ECNotAuthorized": 1,
		"ECInternal":      2,
		"ECCancelled":     3,
		"ECPipelineError": 4,
	}
)

func (x ErrorCode) Enum() *ErrorCode {
	p := new(ErrorCode)
	*p = x
	return p
}

func (x ErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_github_com_johnsiilver_pipelines_stagedpipe_distrib_internal_messages_proto_messages_proto_enumTypes[3].Descriptor()
}

func (ErrorCode) Type() protoreflect.EnumType {
	return &file_github_com_johnsiilver_pipelines_stagedpipe_distrib_internal_messages_proto_messages_proto_enumTypes[3]
}

func (x ErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ErrorCode.Descriptor instead.
func (ErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_github_com_johnsiilver_pipelines_stagedpipe_distrib_internal_messages_proto_messages_proto_rawDescGZIP(), []int{3}
}

// Connect is the message that is sent when a connection is made. It indicates the type
// of connection that is being made.
type Connect struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Type is the type of connection.
	Type ConnType `protobuf:"varint,1,opt,name=type,proto3,enum=stagedpipe.distrib.internal.messages.ConnType" json:"type,omitempty"`
	// Version gives the plugin version information.
	Version *Version `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *Connect) Reset() {
	*x = Connect{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_johnsiilver_pipelines_stagedpipe_distrib_internal_messages_proto_messages_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Connect) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Connect) ProtoMessage() {}

func (x *Connect) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_johnsiilver_pipelines_stagedpipe_distrib_internal_messages_proto_messages_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Connect.ProtoReflect.Descriptor instead.
func (*Connect) Descriptor() ([]byte, []int) {
	return file_github_com_johnsiilver_pipelines_stagedpipe_distrib_internal_messages_proto_messages_proto_rawDescGZIP(), []int{0}
}

func (x *Connect) GetType() ConnType {
	if x != nil {
		return x.Type
	}
	return ConnType_CNTUnknown
}

func (x *Connect) GetVersion() *Version {
	if x != nil {
		return x.Version
	}
	return nil
}

// Message is the message that is sent between the plugin client and the plugin server.
// This is the top level message.
type Message struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The type of message.
	Type MessageType `protobuf:"varint,1,opt,name=type,proto3,enum=stagedpipe.distrib.internal.messages.MessageType" json:"type,omitempty"`
	// The request message if the Type is MTData.
	Req *Request `protobuf:"bytes,2,opt,name=req,proto3" json:"req,omitempty"`
	// A control message in the data stream.
	Control *Control `protobuf:"bytes,3,opt,name=control,proto3" json:"control,omitempty"`
}

func (x *Message) Reset() {
	*x = Message{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_johnsiilver_pipelines_stagedpipe_distrib_internal_messages_proto_messages_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_johnsiilver_pipelines_stagedpipe_distrib_internal_messages_proto_messages_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_github_com_johnsiilver_pipelines_stagedpipe_distrib_internal_messages_proto_messages_proto_rawDescGZIP(), []int{1}
}

func (x *Message) GetType() MessageType {
	if x != nil {
		return x.Type
	}
	return MessageType_MTUnknown
}

func (x *Message) GetReq() *Request {
	if x != nil {
		return x.Req
	}
	return nil
}

func (x *Message) GetControl() *Control {
	if x != nil {
		return x.Control
	}
	return nil
}

type Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Data that is processed in this Request. This can be encoded in multiple ways.
	Data []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	// Err, if set, is an error for the Request. This type of error is for unrecoverable
	// errors in processing, not errors for the data being processed. For example, if it
	// can't communicate with a database or RPC service. For errors with the data itself,
	// add the error to the underlying data type as a separate error.
	Error *Error `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	// Seq is the sequence number of the message. This is used to determine the order
	// of messages in a stream by the caller.
	Seq uint32 `protobuf:"varint,3,opt,name=seq,proto3" json:"seq,omitempty"`
}

func (x *Request) Reset() {
	*x = Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_johnsiilver_pipelines_stagedpipe_distrib_internal_messages_proto_messages_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Request) ProtoMessage() {}

func (x *Request) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_johnsiilver_pipelines_stagedpipe_distrib_internal_messages_proto_messages_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Request.ProtoReflect.Descriptor instead.
func (*Request) Descriptor() ([]byte, []int) {
	return file_github_com_johnsiilver_pipelines_stagedpipe_distrib_internal_messages_proto_messages_proto_rawDescGZIP(), []int{2}
}

func (x *Request) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *Request) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *Request) GetSeq() uint32 {
	if x != nil {
		return x.Seq
	}
	return 0
}

// Data is the data for the message if the Type is MTData.
type Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The raw data for the message, which will need to be converted.
	Raw []byte `protobuf:"bytes,1,opt,name=raw,proto3" json:"raw,omitempty"`
	// The ID of the connection that this message belongs to.
	ConnId uint64 `protobuf:"varint,2,opt,name=conn_id,json=connId,proto3" json:"conn_id,omitempty"`
	// The ID of the request group that this message belongs to.
	// This is unique only within messages with the same ConnID.
	RequestGroupId uint64 `protobuf:"varint,3,opt,name=request_group_id,json=requestGroupId,proto3" json:"request_group_id,omitempty"`
}

func (x *Data) Reset() {
	*x = Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_johnsiilver_pipelines_stagedpipe_distrib_internal_messages_proto_messages_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Data) ProtoMessage() {}

func (x *Data) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_johnsiilver_pipelines_stagedpipe_distrib_internal_messages_proto_messages_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Data.ProtoReflect.Descriptor instead.
func (*Data) Descriptor() ([]byte, []int) {
	return file_github_com_johnsiilver_pipelines_stagedpipe_distrib_internal_messages_proto_messages_proto_rawDescGZIP(), []int{3}
}

func (x *Data) GetRaw() []byte {
	if x != nil {
		return x.Raw
	}
	return nil
}

func (x *Data) GetConnId() uint64 {
	if x != nil {
		return x.ConnId
	}
	return 0
}

func (x *Data) GetRequestGroupId() uint64 {
	if x != nil {
		return x.RequestGroupId
	}
	return 0
}

// Control is a control message.
type Control struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Configuration information for the pipeline request group.
	// The actual data type that should be unmarshalled will be determined by the application logic.
	Config []byte `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
	// An error message. This can only come from the plugin to the controller.
	Error *Error `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	// Support details information about the controller.
	Support *Support `protobuf:"bytes,3,opt,name=support,proto3" json:"support,omitempty"`
	// Type is the type of control message.
	Type ControlType `protobuf:"varint,4,opt,name=type,proto3,enum=stagedpipe.distrib.internal.messages.ControlType" json:"type,omitempty"`
}

func (x *Control) Reset() {
	*x = Control{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_johnsiilver_pipelines_stagedpipe_distrib_internal_messages_proto_messages_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Control) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Control) ProtoMessage() {}

func (x *Control) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_johnsiilver_pipelines_stagedpipe_distrib_internal_messages_proto_messages_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Control.ProtoReflect.Descriptor instead.
func (*Control) Descriptor() ([]byte, []int) {
	return file_github_com_johnsiilver_pipelines_stagedpipe_distrib_internal_messages_proto_messages_proto_rawDescGZIP(), []int{4}
}

func (x *Control) GetConfig() []byte {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *Control) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *Control) GetSupport() *Support {
	if x != nil {
		return x.Support
	}
	return nil
}

func (x *Control) GetType() ControlType {
	if x != nil {
		return x.Type
	}
	return ControlType_CTUnknown
}

// Support details information about the controller.
type Support struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The version of the plugin, in semver format.
	Version *Version `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *Support) Reset() {
	*x = Support{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_johnsiilver_pipelines_stagedpipe_distrib_internal_messages_proto_messages_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Support) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Support) ProtoMessage() {}

func (x *Support) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_johnsiilver_pipelines_stagedpipe_distrib_internal_messages_proto_messages_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Support.ProtoReflect.Descriptor instead.
func (*Support) Descriptor() ([]byte, []int) {
	return file_github_com_johnsiilver_pipelines_stagedpipe_distrib_internal_messages_proto_messages_proto_rawDescGZIP(), []int{5}
}

func (x *Support) GetVersion() *Version {
	if x != nil {
		return x.Version
	}
	return nil
}

// Version details the version information of the client.
type Version struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Major uint32 `protobuf:"varint,1,opt,name=major,proto3" json:"major,omitempty"`
	Minor uint32 `protobuf:"varint,2,opt,name=minor,proto3" json:"minor,omitempty"`
	Patch uint32 `protobuf:"varint,3,opt,name=patch,proto3" json:"patch,omitempty"`
}

func (x *Version) Reset() {
	*x = Version{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_johnsiilver_pipelines_stagedpipe_distrib_internal_messages_proto_messages_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Version) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Version) ProtoMessage() {}

func (x *Version) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_johnsiilver_pipelines_stagedpipe_distrib_internal_messages_proto_messages_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Version.ProtoReflect.Descriptor instead.
func (*Version) Descriptor() ([]byte, []int) {
	return file_github_com_johnsiilver_pipelines_stagedpipe_distrib_internal_messages_proto_messages_proto_rawDescGZIP(), []int{6}
}

func (x *Version) GetMajor() uint32 {
	if x != nil {
		return x.Major
	}
	return 0
}

func (x *Version) GetMinor() uint32 {
	if x != nil {
		return x.Minor
	}
	return 0
}

func (x *Version) GetPatch() uint32 {
	if x != nil {
		return x.Patch
	}
	return 0
}

// Error is an error message.
type Error struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The error message as a string
	Msg string `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
	// Code is the error code.
	Code ErrorCode `protobuf:"varint,2,opt,name=code,proto3,enum=stagedpipe.distrib.internal.messages.ErrorCode" json:"code,omitempty"`
}

func (x *Error) Reset() {
	*x = Error{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_johnsiilver_pipelines_stagedpipe_distrib_internal_messages_proto_messages_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Error) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Error) ProtoMessage() {}

func (x *Error) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_johnsiilver_pipelines_stagedpipe_distrib_internal_messages_proto_messages_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Error.ProtoReflect.Descriptor instead.
func (*Error) Descriptor() ([]byte, []int) {
	return file_github_com_johnsiilver_pipelines_stagedpipe_distrib_internal_messages_proto_messages_proto_rawDescGZIP(), []int{7}
}

func (x *Error) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *Error) GetCode() ErrorCode {
	if x != nil {
		return x.Code
	}
	return ErrorCode_ECUnknown
}

var File_github_com_johnsiilver_pipelines_stagedpipe_distrib_internal_messages_proto_messages_proto protoreflect.FileDescriptor

var file_github_com_johnsiilver_pipelines_stagedpipe_distrib_internal_messages_proto_messages_proto_rawDesc = []byte{
	0x0a, 0x5a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6a, 0x6f, 0x68,
	0x6e, 0x73, 0x69, 0x69, 0x6c, 0x76, 0x65, 0x72, 0x2f, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e,
	0x65, 0x73, 0x2f, 0x73, 0x74, 0x61, 0x67, 0x65, 0x64, 0x70, 0x69, 0x70, 0x65, 0x2f, 0x64, 0x69,
	0x73, 0x74, 0x72, 0x69, 0x62, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x24, 0x73, 0x74,
	0x61, 0x67, 0x65, 0x64, 0x70, 0x69, 0x70, 0x65, 0x2e, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62,
	0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x73, 0x22, 0x96, 0x01, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x12, 0x42,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2e, 0x2e, 0x73,
	0x74, 0x61, 0x67, 0x65, 0x64, 0x70, 0x69, 0x70, 0x65, 0x2e, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69,
	0x62, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x47, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x73, 0x74, 0x61, 0x67, 0x65, 0x64, 0x70, 0x69, 0x70, 0x65,
	0x2e, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0xda, 0x01, 0x0a, 0x07,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x45, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x31, 0x2e, 0x73, 0x74, 0x61, 0x67, 0x65, 0x64, 0x70, 0x69,
	0x70, 0x65, 0x2e, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x3f,
	0x0a, 0x03, 0x72, 0x65, 0x71, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x73, 0x74,
	0x61, 0x67, 0x65, 0x64, 0x70, 0x69, 0x70, 0x65, 0x2e, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62,
	0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x73, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x03, 0x72, 0x65, 0x71, 0x12,
	0x47, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2d, 0x2e, 0x73, 0x74, 0x61, 0x67, 0x65, 0x64, 0x70, 0x69, 0x70, 0x65, 0x2e, 0x64, 0x69,
	0x73, 0x74, 0x72, 0x69, 0x62, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x52,
	0x07, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x22, 0x72, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x41, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x73, 0x74, 0x61, 0x67, 0x65, 0x64, 0x70,
	0x69, 0x70, 0x65, 0x2e, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x2e, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x65,
	0x71, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x73, 0x65, 0x71, 0x22, 0x5b, 0x0a, 0x04,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x61, 0x77, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x03, 0x72, 0x61, 0x77, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x6e, 0x49, 0x64, 0x12,
	0x28, 0x0a, 0x10, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x22, 0xf4, 0x01, 0x0a, 0x07, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x41, 0x0a,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x73,
	0x74, 0x61, 0x67, 0x65, 0x64, 0x70, 0x69, 0x70, 0x65, 0x2e, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69,
	0x62, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x73, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x12, 0x47, 0x0a, 0x07, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2d, 0x2e, 0x73, 0x74, 0x61, 0x67, 0x65, 0x64, 0x70, 0x69, 0x70, 0x65, 0x2e, 0x64,
	0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74,
	0x52, 0x07, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x45, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x31, 0x2e, 0x73, 0x74, 0x61, 0x67, 0x65, 0x64,
	0x70, 0x69, 0x70, 0x65, 0x2e, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x2e, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x22, 0x52, 0x0a, 0x07, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x47, 0x0a, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x73,
	0x74, 0x61, 0x67, 0x65, 0x64, 0x70, 0x69, 0x70, 0x65, 0x2e, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69,
	0x62, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x73, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x22, 0x4b, 0x0a, 0x07, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x14, 0x0a, 0x05, 0x6d, 0x61, 0x6a, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05,
	0x6d, 0x61, 0x6a, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x69, 0x6e, 0x6f, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6d, 0x69, 0x6e, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x70,
	0x61, 0x74, 0x63, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x70, 0x61, 0x74, 0x63,
	0x68, 0x22, 0x5e, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73,
	0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x43, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2f, 0x2e, 0x73, 0x74, 0x61,
	0x67, 0x65, 0x64, 0x70, 0x69, 0x70, 0x65, 0x2e, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x2e,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x73, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x2a, 0x2f, 0x0a, 0x08, 0x43, 0x6f, 0x6e, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a,
	0x0a, 0x43, 0x4e, 0x54, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x10, 0x00, 0x12, 0x13, 0x0a,
	0x0f, 0x43, 0x4e, 0x54, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x10, 0x01, 0x2a, 0x37, 0x0a, 0x0b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x0d, 0x0a, 0x09, 0x4d, 0x54, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x10, 0x00,
	0x12, 0x0a, 0x0a, 0x06, 0x4d, 0x54, 0x44, 0x61, 0x74, 0x61, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09,
	0x4d, 0x54, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x10, 0x02, 0x2a, 0x50, 0x0a, 0x0b, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x54,
	0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x43, 0x54, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x54, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x54, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c,
	0x10, 0x03, 0x12, 0x09, 0x0a, 0x05, 0x43, 0x54, 0x46, 0x69, 0x6e, 0x10, 0x04, 0x2a, 0x65, 0x0a,
	0x09, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x0d, 0x0a, 0x09, 0x45, 0x43,
	0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x43, 0x4e,
	0x6f, 0x74, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x10, 0x01, 0x12, 0x0e,
	0x0a, 0x0a, 0x45, 0x43, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x10, 0x02, 0x12, 0x0f,
	0x0a, 0x0b, 0x45, 0x43, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x6c, 0x65, 0x64, 0x10, 0x03, 0x12,
	0x13, 0x0a, 0x0f, 0x45, 0x43, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x10, 0x04, 0x42, 0x4d, 0x5a, 0x4b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x6a, 0x6f, 0x68, 0x6e, 0x73, 0x69, 0x69, 0x6c, 0x76, 0x65, 0x72, 0x2f, 0x70,
	0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x2f, 0x73, 0x74, 0x61, 0x67, 0x65, 0x64, 0x70,
	0x69, 0x70, 0x65, 0x2f, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x2f, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_github_com_johnsiilver_pipelines_stagedpipe_distrib_internal_messages_proto_messages_proto_rawDescOnce sync.Once
	file_github_com_johnsiilver_pipelines_stagedpipe_distrib_internal_messages_proto_messages_proto_rawDescData = file_github_com_johnsiilver_pipelines_stagedpipe_distrib_internal_messages_proto_messages_proto_rawDesc
)

func file_github_com_johnsiilver_pipelines_stagedpipe_distrib_internal_messages_proto_messages_proto_rawDescGZIP() []byte {
	file_github_com_johnsiilver_pipelines_stagedpipe_distrib_internal_messages_proto_messages_proto_rawDescOnce.Do(func() {
		file_github_com_johnsiilver_pipelines_stagedpipe_distrib_internal_messages_proto_messages_proto_rawDescData = protoimpl.X.CompressGZIP(file_github_com_johnsiilver_pipelines_stagedpipe_distrib_internal_messages_proto_messages_proto_rawDescData)
	})
	return file_github_com_johnsiilver_pipelines_stagedpipe_distrib_internal_messages_proto_messages_proto_rawDescData
}

var file_github_com_johnsiilver_pipelines_stagedpipe_distrib_internal_messages_proto_messages_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_github_com_johnsiilver_pipelines_stagedpipe_distrib_internal_messages_proto_messages_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_github_com_johnsiilver_pipelines_stagedpipe_distrib_internal_messages_proto_messages_proto_goTypes = []interface{}{
	(ConnType)(0),    // 0: stagedpipe.distrib.internal.messages.ConnType
	(MessageType)(0), // 1: stagedpipe.distrib.internal.messages.MessageType
	(ControlType)(0), // 2: stagedpipe.distrib.internal.messages.ControlType
	(ErrorCode)(0),   // 3: stagedpipe.distrib.internal.messages.ErrorCode
	(*Connect)(nil),  // 4: stagedpipe.distrib.internal.messages.Connect
	(*Message)(nil),  // 5: stagedpipe.distrib.internal.messages.Message
	(*Request)(nil),  // 6: stagedpipe.distrib.internal.messages.Request
	(*Data)(nil),     // 7: stagedpipe.distrib.internal.messages.Data
	(*Control)(nil),  // 8: stagedpipe.distrib.internal.messages.Control
	(*Support)(nil),  // 9: stagedpipe.distrib.internal.messages.Support
	(*Version)(nil),  // 10: stagedpipe.distrib.internal.messages.Version
	(*Error)(nil),    // 11: stagedpipe.distrib.internal.messages.Error
}
var file_github_com_johnsiilver_pipelines_stagedpipe_distrib_internal_messages_proto_messages_proto_depIdxs = []int32{
	0,  // 0: stagedpipe.distrib.internal.messages.Connect.type:type_name -> stagedpipe.distrib.internal.messages.ConnType
	10, // 1: stagedpipe.distrib.internal.messages.Connect.version:type_name -> stagedpipe.distrib.internal.messages.Version
	1,  // 2: stagedpipe.distrib.internal.messages.Message.type:type_name -> stagedpipe.distrib.internal.messages.MessageType
	6,  // 3: stagedpipe.distrib.internal.messages.Message.req:type_name -> stagedpipe.distrib.internal.messages.Request
	8,  // 4: stagedpipe.distrib.internal.messages.Message.control:type_name -> stagedpipe.distrib.internal.messages.Control
	11, // 5: stagedpipe.distrib.internal.messages.Request.error:type_name -> stagedpipe.distrib.internal.messages.Error
	11, // 6: stagedpipe.distrib.internal.messages.Control.error:type_name -> stagedpipe.distrib.internal.messages.Error
	9,  // 7: stagedpipe.distrib.internal.messages.Control.support:type_name -> stagedpipe.distrib.internal.messages.Support
	2,  // 8: stagedpipe.distrib.internal.messages.Control.type:type_name -> stagedpipe.distrib.internal.messages.ControlType
	10, // 9: stagedpipe.distrib.internal.messages.Support.version:type_name -> stagedpipe.distrib.internal.messages.Version
	3,  // 10: stagedpipe.distrib.internal.messages.Error.code:type_name -> stagedpipe.distrib.internal.messages.ErrorCode
	11, // [11:11] is the sub-list for method output_type
	11, // [11:11] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() {
	file_github_com_johnsiilver_pipelines_stagedpipe_distrib_internal_messages_proto_messages_proto_init()
}
func file_github_com_johnsiilver_pipelines_stagedpipe_distrib_internal_messages_proto_messages_proto_init() {
	if File_github_com_johnsiilver_pipelines_stagedpipe_distrib_internal_messages_proto_messages_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_github_com_johnsiilver_pipelines_stagedpipe_distrib_internal_messages_proto_messages_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Connect); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_johnsiilver_pipelines_stagedpipe_distrib_internal_messages_proto_messages_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_johnsiilver_pipelines_stagedpipe_distrib_internal_messages_proto_messages_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_johnsiilver_pipelines_stagedpipe_distrib_internal_messages_proto_messages_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_johnsiilver_pipelines_stagedpipe_distrib_internal_messages_proto_messages_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Control); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_johnsiilver_pipelines_stagedpipe_distrib_internal_messages_proto_messages_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Support); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_johnsiilver_pipelines_stagedpipe_distrib_internal_messages_proto_messages_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Version); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_johnsiilver_pipelines_stagedpipe_distrib_internal_messages_proto_messages_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Error); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_github_com_johnsiilver_pipelines_stagedpipe_distrib_internal_messages_proto_messages_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_github_com_johnsiilver_pipelines_stagedpipe_distrib_internal_messages_proto_messages_proto_goTypes,
		DependencyIndexes: file_github_com_johnsiilver_pipelines_stagedpipe_distrib_internal_messages_proto_messages_proto_depIdxs,
		EnumInfos:         file_github_com_johnsiilver_pipelines_stagedpipe_distrib_internal_messages_proto_messages_proto_enumTypes,
		MessageInfos:      file_github_com_johnsiilver_pipelines_stagedpipe_distrib_internal_messages_proto_messages_proto_msgTypes,
	}.Build()
	File_github_com_johnsiilver_pipelines_stagedpipe_distrib_internal_messages_proto_messages_proto = out.File
	file_github_com_johnsiilver_pipelines_stagedpipe_distrib_internal_messages_proto_messages_proto_rawDesc = nil
	file_github_com_johnsiilver_pipelines_stagedpipe_distrib_internal_messages_proto_messages_proto_goTypes = nil
	file_github_com_johnsiilver_pipelines_stagedpipe_distrib_internal_messages_proto_messages_proto_depIdxs = nil
}
